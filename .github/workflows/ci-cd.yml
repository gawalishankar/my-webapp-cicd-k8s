name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install and Test Frontend
        working-directory: frontend
        run: |
          npm install
          npm run lint || true
          npm test || true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install and Test Backend
        working-directory: backend
        run: |
          pip install -r requirements.txt
          pytest || true

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to DigitalOcean
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
          'cd /home/project && docker-compose pull && docker-compose up -d --build'

      - name: Slack Success Notification
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: good
          SLACK_MESSAGE: '✅ Deployment to production successful.'

      - name: Slack Failure Notification
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: danger
          SLACK_MESSAGE: '❌ Deployment failed! Please investigate.'

      - name: Rollback on Failure
        if: failure()
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
          'cd /home/project && docker-compose -f docker-compose.rollback.yml up -d'